CREATE TABLE professor (
    pID NUMBER PRIMARY KEY,
    name VARCHAR2(20),
    salary number(8,2)
);

INSERT INTO professor
VALUES(10,'hau',2000);
INSERT INTO professor
VALUES(20,'hieu',3000);
INSERT INTO professor
VALUES(30,'nhi',2500);

-- to√°n t·ª≠ <> l√† to√°n t·ª≠ kh√°c, t√¨m t√™n c√≥ salary = 3000 v√† pID kh√°c 10
SELECT name 
from professor
where salary = 3000 AND pID <> 10;

-- t√¨m t√™n c√≥ ti·ªÅn l∆∞∆°ng cao nh·∫•t trong professor
SELECT name
from PROFESSOR
where salary = (
    SELECT MAX(salary) FROM PROFESSOR
);

-- in ra name v√† salary c√≥ pID l√† 10,20,30
SELECT name,salary
FROM PROFESSOR 
where pID IN(10,20,30);

-- c√°ch 2
SELECT name,salary 
FROM PROFESSOR 
where pID=10 or pID=20 or pID=30;


SELECT * FROM PROFESSOR;

-- table teacher
CREATE TABLE teacher (
    cID NUMBER PRIMARY key,
    semester NUMBER,
    year VARCHAR2(4),
    pID NUMBER
);

INSERT into teacher
VALUES(1,2,'2023',10);
INSERT into teacher 
VALUES(2,1,'2023',10);
INSERT into teacher 
VALUES(3,1,'2024',11);
INSERT into teacher 
VALUES(4,2,'2024',12);

SELECT * FROM teacher;
-- t√¨m t·∫•t c·∫£ c√°c gi√°o s∆∞ c√≥ pID l√† 10, 20, 30 (distinct l√† kh√¥ng l·∫∑p l·∫°i)
SELECT COUNT(distinct pID) FROM TEACHER;


-- Ch·ªâ l·∫•y th√¥ng tin c·ªßa professor c√≥ pID = 10, v√¨ ch·ªâ ng∆∞·ªùi n√†y t·ª´ng d·∫°y trong b·∫£ng teacher.
-- üîé V·ªõi d·ªØ li·ªáu hi·ªán t·∫°i:
-- 	‚Ä¢	teacher c√≥ pID: 10, 10, 11, 12
-- 	‚Ä¢	professor c√≥ pID: 10, 20, 30
-- ‚Üí K·∫øt qu·∫£ tr·∫£ v·ªÅ l√†: ch·ªâ c√≥ gi√°o s∆∞ pID = 10 v√¨ 10 t·ªìn t·∫°i trong c·∫£ hai b·∫£ng.
SELECT *
FROM professor p
WHERE EXISTS (
    SELECT 1
    FROM teacher t
    WHERE t.pID = p.pID
);

--  Ch·ªçn name c·ªßa professor c√≥ salary l·ªõn h∆°n t·∫•t c·∫£ c√°c gi√°o s∆∞ c√≤n l·∫°i ‚Üí ch√≠nh l√† ng∆∞·ªùi l∆∞∆°ng cao nh·∫•t.
-- ‚úÖ C√°ch 1: D√πng ALL trong so s√°nh
SELECT name
FROM PROFESSOR p
WHERE p.salary > ALL (
    select p2.salary
    from professor p2 
    where p2.pID <> p.PID
);

-- ‚úÖ C√°ch 2: M√¥ ph·ªèng ‚Äúfor all‚Äù b·∫±ng NOT EXISTS + ph·ªß ƒë·ªãnh ƒëi·ªÅu ki·ªán
SELECT p.name
FROM professor p
WHERE NOT EXISTS (
    SELECT *
    FROM professor p2
    WHERE p2.salary > p.salary
);

-- t√¨m t·∫•t c·∫£ t√™n gi√°o s∆∞ kh√¥ng b·ªã tr√πng l·∫∑p trong b·∫£ng professor(d√πng UNIQUE hay DISTINCT ƒë·ªÅu ƒë∆∞·ª£c)
SELECT UNIQUE name
FROM professor;
SELECT DISTINCT name
FROM professor;

-- d√πng c√°c h√†m t·ªïng h·ª£p ƒë·ªÉ t√≠nh to√°n c√°c gi√° tr·ªã trong b·∫£ng professor
SELECT max(salary)
FROM professor;

SELECT min(salary)
FROM professor;

SELECT avg(salary)
FROM professor;

SELECT sum(salary)
FROM professor;

-- C√¢u l·ªánh s·∫Ω tr·∫£ v·ªÅ 2 gi√°o s∆∞ c√≥ m·ª©c l∆∞∆°ng th·∫•p nh·∫•t trong b·∫£ng professor.
SELECT * 
FROM (
    SELECT * FROM professor ORDER BY salary 
) WHERE ROWNUM <= 2;

-- C√¢u l·ªánh s·∫Ω tr·∫£ v·ªÅ 2 gi√°o s∆∞ c√≥ m·ª©c l∆∞∆°ng cao nh·∫•t trong b·∫£ng professor.
SELECT * 
FROM (
    SELECT * FROM professor ORDER BY salary DESC
) WHERE ROWNUM <= 2;